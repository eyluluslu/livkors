// This is your production Prisma schema file for PostgreSQL.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma-production"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  orders    Order[]
  carts     Cart[]
  addresses Address[]
  paymentMethods PaymentMethod[]
  messages Message[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  imageUrl    String?
  stock       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  cartItems  Cart[]
  orderItems OrderItem[]
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  products Product[]
}

model Cart {
  id        String   @id @default(cuid())
  userId    String
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
}

model Order {
  id         String      @id @default(cuid())
  userId     String
  total      Float
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  // Relations
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  createdAt DateTime @default(now())

  // Relations
  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])
}

model Message {
  id        String   @id @default(cuid())
  userId    String
  title     String
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SiteSettings {
  id              String   @id @default("default")
  siteName        String   @default("Livkors E-Commerce")
  siteDescription String   @default("Modern e-commerce platform")
  logoUrl         String?
  heroTitle       String   @default("Welcome to Our Store")
  heroSubtitle    String   @default("Discover amazing products")
  footerText      String   @default("Â© 2024 Livkors. All rights reserved.")
  socialFacebook  String?
  socialInstagram String?
  socialTwitter   String?
  socialLinkedin  String?
  metaTitle       String   @default("Livkors E-Commerce")
  metaDescription String   @default("Modern e-commerce platform with amazing products")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model HeroBanner {
  id          String   @id @default(cuid())
  title       String
  subtitle    String?
  description String?
  imageUrl    String?
  buttonText  String?
  buttonLink  String?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AboutPage {
  id             String   @id @default("default")
  title          String   @default("About Us")
  heroTitle      String   @default("Our Story")
  heroSubtitle   String   @default("Learn more about our journey")
  storyTitle     String   @default("Our Story")
  storyContent   String   @default("We are passionate about delivering quality products...")
  visionTitle    String   @default("Our Vision")
  visionContent  String   @default("To be the leading e-commerce platform...")
  missionTitle   String   @default("Our Mission")
  missionContent String   @default("Providing exceptional service and products...")
  phone          String   @default("+90 555 123 4567")
  email          String   @default("info@livkors.com")
  address        String   @default("Istanbul, Turkey")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Address {
  id        String   @id @default(cuid())
  userId    String
  title     String
  address   String
  city      String
  country   String
  zipCode   String?
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PaymentMethod {
  id          String   @id @default(cuid())
  userId      String
  type        String   // CREDIT_CARD, DEBIT_CARD, PAYPAL, etc.
  provider    String   // VISA, MASTERCARD, PAYPAL, etc.
  last4Digits String?
  expiryMonth Int?
  expiryYear  Int?
  isDefault   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Newsletter {
  id        String   @id @default(cuid())
  email     String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
} 